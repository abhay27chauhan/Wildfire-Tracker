{"version":3,"sources":["component/Header/Header.js","assets/spinner.gif","component/Loader/Loader.js","component/LocationInfoBox/LocationInfoBox.js","component/LocationMarker/LocationMarker.js","component/Map/Map.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","icon","locationIcon","Loader","src","spinner","alt","LocationInfoBox","info","id","title","LocationMarker","lat","lng","onClick","Map","eventData","center","zoom","useState","locationInfo","setLocationInfo","markers","map","ev","index","categories","geometries","coordinates","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","App","setEventData","loading","setLoading","useEffect","a","fetch","res","json","events","fetchEvents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iWAYeA,MARf,WACI,OACI,qBAAKC,UAAU,SAAf,SACI,+BAAI,cAAC,OAAD,CAAMC,KAAMC,MAAhB,4CCPG,G,MAAA,IAA0B,qCCY1BC,MATf,WACI,OACI,sBAAKH,UAAU,SAAf,UACI,qBAAKI,IAAKC,EAASC,IAAI,YACvB,mD,cCQGC,MAZf,YAAoC,IAATC,EAAQ,EAARA,KACvB,OACI,sBAAKR,UAAU,iBAAf,UACI,qDACA,+BACI,sCAAQ,iCAAUQ,EAAKC,QACvB,yCAAW,iCAAUD,EAAKE,kB,MCI3BC,MARf,YAA+C,EAArBC,IAAqB,EAAhBC,IAAiB,IAAZC,EAAW,EAAXA,QAChC,OACI,qBAAKd,UAAU,mBAAmBc,QAASA,EAA3C,SACI,cAAC,OAAD,CAAMb,KAAMC,IAAcF,UAAU,sB,MCAhD,SAASe,EAAT,GAA2C,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAAQ,EACEC,mBAAS,MADX,mBAC/BC,EAD+B,KACjBC,EADiB,KAGhCC,EAAUN,EAAUO,KAAI,SAACC,EAAIC,GAC/B,OANuB,IAMpBD,EAAGE,WAAW,GAAGjB,GACT,cAAC,EAAD,CAA4BG,IAAKY,EAAGG,WAAW,GAAGC,YAAY,GAAIf,IAAKW,EAAGG,WAAW,GAAGC,YAAY,GAAId,QAAS,kBAAMO,EAAgB,CAAEZ,GAAIe,EAAGf,GAAIC,MAAOc,EAAGd,UAAzIe,GAEzB,QAGX,OACI,sBAAKzB,UAAU,MAAf,UACI,cAAC,IAAD,CACI6B,iBAAkB,CAAEC,IAAK,2CACzBC,cAAgBd,EAChBe,YAAcd,EAHlB,SAKKI,IAEJF,GAAgB,cAAC,EAAD,CAAiBZ,KAAMY,OAKpDL,EAAIkB,aAAe,CACfhB,OAAQ,CACJL,IAAK,QACLC,KAAM,UAEVK,KAAM,GAGKH,QCTAmB,MA1Bf,WAAgB,IAAD,EACqBf,mBAAS,IAD9B,mBACNH,EADM,KACKmB,EADL,OAEiBhB,oBAAS,GAF1B,mBAENiB,EAFM,KAEGC,EAFH,KAkBb,OAdAC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,6DAClBF,GAAW,GADO,SAEAG,MAAM,mDAFN,cAEZC,EAFY,gBAIOA,EAAIC,OAJX,gBAIVC,EAJU,EAIVA,OAERR,EAAaQ,GACbN,GAAW,GAPO,4CAAH,qDAUjBO,KACC,IAGD,gCACE,cAAC,EAAD,IACER,EAAyC,cAAC,EAAD,IAA/B,cAAC,EAAD,CAAKpB,UAAWA,QCdnB6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.23c95b52.chunk.js","sourcesContent":["import './Header.css';\nimport { Icon } from '@iconify/react';\nimport locationIcon from '@iconify/icons-mdi/fire-alert';\n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <h1><Icon icon={locationIcon} /> Wildfire Tracker (Powered By NASA)</h1>\n        </div>\n    )\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import './Loader.css';\nimport spinner from '../../assets/spinner.gif';\n\nfunction Loader() {\n    return (\n        <div className=\"loader\">\n            <img src={spinner} alt=\"Loading\" />\n            <h1>Fetching Data</h1>\n        </div>\n    )\n}\n\nexport default Loader;\n","import React from 'react'\nimport './LocationInfoBox.css'\n\nfunction LocationInfoBox({ info }) {\n    return (\n        <div className=\"location__info\">\n            <h2>Event Location Info</h2>\n            <ul>\n                <li>ID: <strong>{ info.id }</strong></li>\n                <li>TITLE: <strong>{ info.title }</strong></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default LocationInfoBox;\n","import React from 'react';\nimport { Icon } from '@iconify/react';\nimport locationIcon from '@iconify/icons-mdi/fire-alert';\nimport './LocationMarker.css'\n\nfunction LocationMarker({ lat, lng, onClick }) {\n    return (\n        <div className=\"location__marker\" onClick={onClick}>\n            <Icon icon={locationIcon} className=\"location__icon\"/>    \n        </div>\n    )\n}\n\nexport default LocationMarker;\n","import { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport LocationInfoBox from '../LocationInfoBox/LocationInfoBox';\nimport LocationMarker from '../LocationMarker/LocationMarker';\nimport './Map.css'\n\nconst NATURAL_EVENT_WILDFIRE = 8;\n\nfunction Map({ eventData, center, zoom }) {\n    const [locationInfo, setLocationInfo] = useState(null)\n\n    const markers = eventData.map((ev, index) => {\n        if(ev.categories[0].id === NATURAL_EVENT_WILDFIRE) {\n            return <LocationMarker key={index} lat={ev.geometries[0].coordinates[1]} lng={ev.geometries[0].coordinates[0]} onClick={() => setLocationInfo({ id: ev.id, title: ev.title })} />\n        }\n        return null;\n    })\n\n    return (\n        <div className=\"map\">\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: 'AIzaSyDhE_Sw7RQ5cSEXhizPPYVBBhGQELtb2lk' }}\n                defaultCenter={ center }\n                defaultZoom={ zoom }\n            >\n                {markers}\n            </GoogleMapReact>\n            {locationInfo && <LocationInfoBox info={locationInfo} />}\n        </div>\n    )\n}\n\nMap.defaultProps = {\n    center: {\n        lat: 42.3265,\n        lng: -122.8756\n    },\n    zoom: 6\n}\n\nexport default Map;\n","import { useEffect, useState } from \"react\";\nimport Header from \"./component/Header/Header\";\nimport Loader from \"./component/Loader/Loader\";\nimport Map from './component/Map/Map'\n\nfunction App() {\n  const [eventData, setEventData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true)\n      const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events');\n\n      const { events } = await res.json();\n\n      setEventData(events);\n      setLoading(false);\n    }\n\n    fetchEvents()\n  }, [])\n\n  return (\n    <div>\n      <Header />\n      {!loading ? <Map eventData={eventData}/> : <Loader /> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}